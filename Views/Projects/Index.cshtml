@model IEnumerable<CrucibleBugTracker.Models.Project>

@using CrucibleBugTracker.Enums
@using CrucibleBugTracker.Extensions;
@using CrucibleBugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity;

@inject IBTFileService _FileService
@inject IBTProjectService _ProjectService
@inject IBTRoleService _RoleService
@inject UserManager<BTUser> _UserManager

@{
    ViewData["Title"] = ViewBag.Title;
    int companyId = User.Identity!.GetCompanyId();
    bool isUserAdmin = User.IsInRole(nameof(BTRoles.Admin));
    ViewData["ProjectManagers"] = new SelectList(await _RoleService.GetUsersInRoleAsync(nameof(BTRoles.ProjectManager), companyId), nameof(BTUser.Id), nameof(BTUser.FullName));
}

<div class="page-header d-md-flex justify-content-between">
    <div>
        <h3>Projects</h3>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-controller="Home" asp-action="Index">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a asp-controller="Projects" asp-action="Index">Projects</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
            </ol>
        </nav>
    </div>
    <div class="mt-2 mt-md-0">
        <div class="dropdown">
            <a href="#" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                <i class="ti-settings mr-2"></i> Actions
            </a>
            <div class="dropdown-menu dropdown-menu-right">
                <a class="dropdown-item" asp-controller="Projects" asp-action="Create">Create a project</a>
                <a class="dropdown-item" href="#">Another action</a>
                <a class="dropdown-item" href="#">Something else here</a>
            </div>
        </div>
    </div>
</div>

<!-- Info Pills -->
<div class="row mt-2">
    <div class="col-lg-3 col-md-6 col-sm-6">
        <a style="text-decoration:none">
            <div class="card text-center bg-info">
                <div class="body">
                    <div class="p-15 text-light">
                        <h3>@Model.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                        <span>Active Projects</span>
                    </div>
                </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <a style="text-decoration:none">
            <div class="card text-center bg-secondary">
                <div class="body">
                    <div class="p-15 text-light">

                        <h3>@*@Model.Tickets.Count()*@</h3>
                        <span>Total Tickets</span>
                    </div>
                </div>
            </div>
        </a>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card text-center bg-warning">
            <div class="body">
                <div class="p-15 text-light">
                    <h3>@*@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()*@</h3>
                    <span>Unassigned Tickets</span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card text-center bg-dark">
            <div class="body">
                <div class="p-15 text-light">
                    <h3>
                        @*@(
                        Model.Projects.Count()
                        + Model.Tickets.Count()
                        + Model.Members.Count()
                        )*@
                    </h3>
                    <span>Total Data</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h6 class="card-title">@ViewBag.Title</h6>
                <div class="table-responsive">
                    <table id="projectsTable" class="table">
                        <thead>
                            <tr class="text-center">
                                <th class="text-start">Project Name</th>
                                <th>Created Date</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Priority</th>
                                <th>Project Manager</th>
                                <th>Status</th>
                                <th class="text-right">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (Project project in Model)
                                {
                                    <tr>
                                        <td>
                                            <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="d-flex align-items-center">
                                                <img width="40" src="@_FileService.ConvertByteArrayToFile(project.ImageFileData, project.ImageFileType, DefaultImage.ProjectImage)"
                                                     class="rounded mr-3" alt="Project Image">
                                                <span>@project.Name</span>
                                            </a>
                                        </td>
                                        <td>@project.Created.ToString("MMM dd, yyyy")</td>
                                        <td>@project.StartDate.ToString("MMM dd, yyyy")</td>
                                        <td>@project.EndDate.ToString("MMM dd, yyyy")</td>
                                        <td class="text-center">
                                            @{
                                                @if (project.Archived == true)
                                                {
                                                    <span class="badge bg-info-bright">None</span>
                                                }
                                                else
                                                {
                                                    if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Low))
                                                    {
                                                        <span class="badge bg-success-bright">@project.ProjectPriority?.Name</span>
                                                    }
                                                    if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Medium))
                                                    {
                                                        <span class="badge bg-warning-bright">@project.ProjectPriority?.Name</span>
                                                    }
                                                    if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.High))
                                                    {
                                                        <span class="badge bg-secondary-bright">@project.ProjectPriority?.Name</span>
                                                    }
                                                    if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Urgent))
                                                    {
                                                        <span class="badge bg-danger-bright">@project.ProjectPriority?.Name</span>
                                                    }
                                                }
                                            }
                                        </td>
                                        <td class="text-center">
                                            @{
                                                BTUser? projectManager = await _ProjectService.GetProjectManagerAsync(project.Id, project.CompanyId);

                                                if (projectManager != null)
                                                {

                                                    @if (projectManager.ImageFileData != null)
                                                    {
                                                        <figure class="avatar">
                                                            <img data-bs-toggle="tooltip"
                                                                 data-bs-placement="top"
                                                                 title="@projectManager.FullName"
                                                                 data-bs-title="@projectManager.FullName"
                                                                 src="@_FileService.ConvertByteArrayToFile(projectManager.ImageFileData, projectManager.ImageFileType, DefaultImage.BTUserImage)"
                                                                 class="rounded-circle"
                                                                 alt="avatar">
                                                        </figure>
                                                    }
                                                    else
                                                    {
                                                        <figure class="avatar mr-3">
                                                            <span class="avatar-title bg-info-bright text-info rounded-circle"
                                                                  data-bs-toggle="tooltip"
                                                                  data-bs-placement="top"
                                                                  title="@projectManager.FullName"
                                                                  data-bs-title="@projectManager.FullName">
                                                                @projectManager.FirstName?[0]
                                                            </span>
                                                        </figure>
                                                    }

                                                }
                                                else
                                                {
                                                    <span class="text-start">Unassigned</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-center">
                                            @{
                                                if (project.Archived)
                                                {
                                                    <span class="badge bg-info">Archived</span>
                                                }
                                                else if (project.StartDate > DateTime.UtcNow)
                                                {
                                                    <span class="badge bg-primary">Not Started</span>
                                                }
                                                else if (project.EndDate < DateTime.UtcNow)
                                                {
                                                    <span class="badge bg-danger">Past Due</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">In Progress</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-right">
                                            <div class="dropdown">
                                                <a href="#" data-toggle="dropdown"
                                                   class="btn btn-floating"
                                                   aria-haspopup="true" aria-expanded="false">
                                                    <i class="ti-more-alt"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="dropdown-item">View Details</a>
                                                    @{
                                                        if (isUserAdmin || (await _ProjectService.GetProjectManagerAsync(project.Id, project.CompanyId))?.Id == _UserManager.GetUserId(User))
                                                        {
                                                            if (isUserAdmin)
                                                            {
                                                                <a role="button" data-toggle="modal" data-target="#assignPMModal" class="dropdown-item" onclick="populatePMModal(@project.Id, `@await _ProjectService.GetProjectManagerIdAsync(project.Id, companyId)`, '@project.Name')">Assign PM</a>
                                                            }
                                                            <a asp-controller="Projects" asp-action="Edit" asp-route-id="@project.Id" class="dropdown-item">Edit</a>
                                                            @if (project.Archived)
                                                            {
                                                                <a role="button" data-toggle="modal" data-target="#restoreProjectModal" class="dropdown-item text-success" onclick="populateRestoreModal(@project.Id, @project.Tickets.Count(t => t.ArchivedByProject == true), '@project.Name')">Restore</a>
                                                            }
                                                            else
                                                            {
                                                                <a role="button" data-toggle="modal" data-target="#archiveProjectModal" class="dropdown-item text-danger" onclick="populateArchiveModal(@project.Id, @project.Tickets.Count(t => t.ArchivedByProject == false && t.Archived == false), '@project.Name')">Archive</a>
                                                            }
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="assignPMModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Assign Project Manager</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti-close"></i>
                </button>
            </div>
            <form asp-action="AssignPM" method="post" class="d-flex flex-column">
                <div class="modal-body pt-1">
                    <input type="hidden" id="modalTicketId" name="projectId" value="" />
                    <h5 id="modalProjectName"></h5>
                    <select class="form-control" asp-items="@ViewBag.ProjectManagers" name="projectManagerId" id="projectManagers">
                        <option value="@null">Unassigned</option>
                    </select>
                </div>
                <div class="modal-footer" style="height:inherit">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        Close
                    </button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="restoreProjectModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Restore Project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti-close"></i>
                </button>
            </div>
            <form asp-action="Restore" asp-route-id="" method="post" class="d-flex flex-column">
                <div class="modal-body pt-0">
                    <input type="hidden" id="restoreProject" name="restoreProjectId" value="" />
                    <h5 id="restoreProjectName">Project Name</h5>
                    <span>Are you sure you want to restore this project? This will also restore <span id="ticketsToRestore"></span> ticket(s) that were archived by this project.</span>
                </div>
                <div class="modal-footer" style="height:inherit">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        No/Close
                    </button>
                    <button type="submit" class="btn btn-primary">Yes/Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="archiveProjectModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Archive Project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="ti-close"></i>
                </button>
            </div>
            <form asp-action="Archive" method="post" class="d-flex flex-column">
                <div class="modal-body pt-0">
                    <input type="hidden" id="archiveProject" name="archiveProjectId" value="" />
                    <h5 id="archiveProjectName">Project Name</h5>
                    <span>Are you sure you want to archive this Project? This will also archive <span id="ticketsToArchive"></span> ticket(s) not already archived in this project.</span>
                </div>
                <div class="modal-footer" style="height:inherit">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        No/Close
                    </button>
                    <button type="submit" class="btn btn-primary">Yes/Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#projectsTable').DataTable({
                "columnDefs": [
                    { "type": "date", "targets": [1, 2, 3] },
                    { "orderable": false, "targets": [-1] }
                ]
            });
        });
    </script>
    <script>
        function populatePMModal(projectId, projectManagerId, projectName) {
            var ticketId = document.getElementById("modalTicketId");
            ticketId.value = projectId;

            var modalProjectName = document.getElementById("modalProjectName");
            modalProjectName.innerHTML = projectName;

            var projectManagers = document.getElementById("projectManagers");

            for (var i = 0; i < projectManagers.options.length; i++) {
                if (projectManagers.options[i].value == projectManagerId) {
                    projectManagers.options[i].selected = true;
                    break;
                }
            }
        }

        function populateArchiveModal(archiveId, numberOfTickets, projectName) {
            var ticketId = document.getElementById("archiveProject");
            ticketId.value = archiveId

            var ticketsToArchive = document.getElementById("ticketsToArchive");
            ticketsToArchive.innerHTML = numberOfTickets;

            var archiveProjectName = document.getElementById("archiveProjectName");
            archiveProjectName.innerHTML = projectName;
        }

        function populateRestoreModal(restoreId, numberOfTickets, projectName) {
            var ticketId = document.getElementById("restoreProject");
            ticketId.value = restoreId;

            var ticketsToRestore = document.getElementById("ticketsToRestore");
            ticketsToRestore.innerHTML = numberOfTickets;

            var restoreProjectName = document.getElementById("restoreProjectName");
            restoreProjectName.innerHTML = projectName;
        }
    </script>
}