@model CrucibleBugTracker.Models.Project

@using CrucibleBugTracker.Services.Interfaces
@using CrucibleBugTracker.Enums
@using Microsoft.AspNetCore.Identity;


@inject IBTFileService _FileService
@inject IBTRoleService _RoleService
@inject IBTProjectService _ProjectService
@inject UserManager<BTUser> _userManager

@{
    ViewData["Title"] = "Details";
    BTUser? projectManager = await _ProjectService.GetProjectManagerAsync(Model.Id, Model.CompanyId);
    string? userId = (await _userManager.GetUserAsync(User))?.Id;

}


<div class="p-3 d-flex flex-column">
    <h1>Project Details</h1>
    <div class="row g-3 mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex">
                    <h5>
                        @{
                            if (Model.Archived)
                            {
                                <span class="badge bg-secondary">Archived</span>
                            }
                            else if (Model.StartDate > DateTime.UtcNow)
                            {
                                <span class="badge bg-secondary">Not Started</span>
                            }
                            else if (Model.EndDate < DateTime.UtcNow)
                            {
                                <span class="badge bg-danger">Past Due</span>
                            }
                            else
                            {
                                <span class="badge bg-success">In Progress</span>
                            }
                        }
                    </h5>
                    @if (User.IsInRole(nameof(BTRoles.Admin)) || projectManager?.Id == userId)
                    {
                        <div class="ms-auto">
                            <a class="btn btn-sm btn-secondary" asp-controller="Projects" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                            <a class="btn btn-sm btn-secondary" href="#">Archive / Restore</a>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <h5 class="card-title">
                        @Model.Name&nbsp;
                        @switch (Model.ProjectPriority?.Name)
                        {
                            case nameof(BTProjectPriorities.Low):
                                <span class="badge bg-info">Low Priority</span>
                                break;
                            case nameof(BTProjectPriorities.Medium):
                                <span class="badge bg-secondary">Medium Priority</span>
                                break;
                            case nameof(BTProjectPriorities.High):
                                <span class="badge bg-secondary">High Priority</span>
                                break;
                            case nameof(BTProjectPriorities.Urgent):
                                <span class="badge bg-danger">Urgent Priority </span>
                                break;
                        }
                    </h5>
                    <h6 class="card-subtitle mb-4 text-muted">Created Date: @Model.Created.ToString("MMMM dd, yyyy")</h6>
                    <h6 class="card-subtitle mb-4 text-muted">Start Date: @Model.StartDate.ToString("MMMM dd, yyyy")</h6>
                    <h6 class="card-subtitle mb-4 text-muted">End Date: @Model.EndDate.ToString("MMMM dd, yyyy")</h6>
                    <p class="card-text">
                        @Html.Raw(Model.Description)
                    </p>
                </div>
                <div class="card-footer fw-bold lead">
                    Project Manager:
                    @{
                        if (string.IsNullOrEmpty(projectManager?.FullName))
                        {
                            <span>Unassigned</span>
                        }
                        else
                        {
                            <span>@projectManager.FullName</span>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="card h-100">
                        <div class="card-header">
                            Developers
                        </div>
                        <div class="card-body">
                            <ul>
                                @{
                                    foreach (BTUser member in Model.Members)
                                    {
                                        if (await _RoleService.IsUserInRole(member, nameof(BTRoles.Developer)))
                                        {
                                            <li>
                                                @member.FullName
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="card h-100">
                        <div class="card-header">
                            Submitters
                        </div>
                        <div class="card-body">
                            <ul>
                                @{
                                    foreach (BTUser member in Model.Members)
                                    {
                                        if (await _RoleService.IsUserInRole(member, nameof(BTRoles.Submitter)))
                                        {
                                            <li>
                                                @member.FullName
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (User.IsInRole(nameof(BTRoles.Admin)) || projectManager?.Id == userId)
        {
            <div class="col-12">
                <div class="d-flex flex-column align-items-stretch align-items-lg-end">
                    <a href="#" class="btn btn-secondary btn-sm">
                        Manage Project Members
                    </a>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="ticketsTable" class="table">
                            <thead>
                                <tr>
                                    <th>Ticket Title</th>
                                    <th>Priority</th>
                                    <th>Developer</th>
                                    <th>Archived</th>
                                    <th class="text-right">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (Ticket ticket in Model.Tickets)
                                {

                                    <tr>
                                        <td>
                                            <a asp-controller="Tickets" asp-action="Details" asp-route-id="@ticket.Id">@ticket.Title</a>
                                        </td>
                                        <td>
                                            @switch (ticket.TicketPriority?.Name)
                                            {
                                                case nameof(BTTicketPriorities.Low):
                                                    <span class="badge bg-success-bright text-success">@ticket.TicketPriority.Name</span>
                                                    break;
                                                case nameof(BTTicketPriorities.Medium):
                                                    <span class="badge bg-primary-bright text-primary">@ticket.TicketPriority.Name</span>
                                                    break;
                                                case nameof(BTTicketPriorities.High):
                                                    <span class="badge bg-warning-bright text-warning">@ticket.TicketPriority.Name</span>
                                                    break;
                                                case nameof(BTTicketPriorities.Urgent):
                                                    <span class="badge bg-danger-bright text-danger">@ticket.TicketPriority.Name</span>
                                                    break;
                                                default:
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @if (ticket.DeveloperUserId != null)
                                            {
                                                <figure class="avatar avatar-sm mr-3">
                                                    <span class="avatar-title bg-info-bright text-info rounded-circle"
                                                          data-bs-toggle="tooltip"
                                                          data-bs-placement="top"
                                                          data-bs-title="@ticket.DeveloperUser?.FullName">
                                                        @ticket.DeveloperUser?.FirstName?[0]
                                                    </span>
                                                </figure>
                                            }
                                            else
                                            {
                                                <span>Unassigned</span>
                                            }
                                        </td>
                                        <td>
                                            @if (ticket.Archived)
                                            {
                                                <span class="badge bg-danger-bright text-danger">Yes</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success-bright text-success">No</span>
                                            }
                                        </td>
                                        <td class="text-right">
                                            <div class="dropdown">
                                                <a href="#" data-toggle="dropdown"
                                                   class="btn btn-floating"
                                                   aria-haspopup="true" aria-expanded="false">
                                                    <i class="ti-more-alt"></i>
                                                </a>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <a asp-controller="Tickets" asp-action="Details" asp-route-id="@ticket.Id" class="dropdown-item">View Detail</a>
                                                    <a asp-controller="Tickets" asp-action="AssignDev" asp-route-id="@ticket.Id" class="dropdown-item">Assign Dev</a>
                                                    <a asp-controller="Tickets" asp-action="Edit" asp-route-id="@ticket.Id" class="dropdown-item">Edit</a>
                                                    <a asp-controller="Tickets" asp-action="Archive" asp-route-id="@ticket.Id" class="dropdown-item text-danger">Archive</a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="mt-4 ms-auto">
    <a asp-controller="Projects" asp-action="Index" class="btn btn-dark">Back to List</a>
</div>

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ImageFormFile)
        </dt>
        <dd class="col-sm-10">
            <img src="@_FileService.ConvertByteArrayToFile(Model.ImageFileData, Model.ImageFileType, DefaultImage.ProjectImage)" class="img-fluid" id="projectImage" />
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
